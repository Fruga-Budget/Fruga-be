version: 2.1 # use CircleCI 2.1
orbs:
  node: circleci/node@5.2.0 # Needed for javascript runtime

executors:
  ruby-executor:
    docker:
      - image: cimg/ruby:3.2.2 # primary container
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:11.14-bullseye # secondary container for PostgreSQL
        environment: # environment variables for database
          POSTGRES_USER: postgres
          POSTGRES_DB: mod_4_randomizer_test
          POSTGRES_HOST_AUTH_METHOD: trust

jobs:
  build-and-test:
    executor: ruby-executor
    steps:
      - checkout # Check out the source code

      # Install Node.js and Yarn
      - node/install:
          install-yarn: true
          node-version: '16.15.1'

      # Install Bundler and project dependencies
      - run:
          name: Install Bundler
          command: gem install bundler

      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle

      # Wait for PostgreSQL to be ready
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run:
          name: Database setup
          command: bin/rails db:create db:migrate --trace

      # Run tests
      - run:
          name: Run RSpec tests
          command: bundle exec rspec

      # Save test results for timing analysis
      - store_test_results:
          path: test_results

  deploy:
    docker:
      - image: alpine:3.12
    steps:
      - checkout

      # Install Flyctl and deploy the app
      - run:
          name: Install Flyctl
          command: |
            apk add --no-cache curl
            curl -L https://fly.io/install.sh | sh
            export FLYCTL_INSTALL="/home/circleci/.fly"
            export PATH="$FLYCTL_INSTALL/bin:$PATH"
            echo "Successfully Installed Flyctl"
            flyctl version

      - run:
          name: Deploy app to Fly
          command: |
            flyctl auth token "$FLY_API_TOKEN"
            flyctl deploy
            flyctl status
            flyctl info

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
